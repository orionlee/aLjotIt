<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
          package="net.oldev.aljotit">

    <!-- For use on lock screen -->
    <uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW"/>
    <!-- Listen to lock screen changes on boot -->
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED"/>

    <application
        android:name=".LSScratchPadApp"
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/AppTheme">
        <activity
            android:name=".MainActivity"
            android:label="@string/app_name"
            android:launchMode="singleTop"
            android:theme="@style/AppTheme.NoActionBar.TransparentBG"
            android:windowSoftInputMode="stateAlwaysVisible">
            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>
                <!--
                     Reason: so that long-pressing QS Tile will bring up Scratch Pad
                             (simple press brings up a new Keep note currently)
                -->
                <action android:name="android.service.quicksettings.action.QS_TILE_PREFERENCES"/>

                <category android:name="android.intent.category.LAUNCHER"/>
            </intent-filter>
        </activity>

        <service
            android:name=".LSScratchPadTileService"
            android:icon="@drawable/ic_tile"
            android:label="@string/tile_name"
            android:permission="android.permission.BIND_QUICK_SETTINGS_TILE">
            <intent-filter>
                <action android:name="android.service.quicksettings.action.QS_TILE"/>
            </intent-filter>
            <!--
                 Set it as active tile to make UI more snappy.
                 The tile UI is static so there is no other work need to be done.
            -->
            <meta-data
                android:name="android.service.quicksettings.ACTIVE_TILE"
                android:value="true"/>
        </service>

        <activity
            android:name=".SettingsActivity"
            android:label="@string/title_activity_settings"
            android:parentActivityName=".MainActivity">

            <!-- Parent activity meta-data to support 4.0 and lower -->
            <meta-data
                android:name="android.support.PARENT_ACTIVITY"
                android:value="net.oldev.aljotit.MainActivity"/>
        </activity>
        <activity
            android:name=".ShareReceiverActivity"
            android:label="@string/share_receiver_name">
            <intent-filter>
                <action android:name="android.intent.action.SEND"/>

                <category android:name="android.intent.category.DEFAULT"/>

                <data android:mimeType="text/plain"/>
            </intent-filter>
        </activity>
        <!-- MainIntentService: a workaround to start MainActivity from Lock Screen notification -->
        <service
            android:name=".MainIntentService"
            android:exported="false">
        </service>

        <receiver android:name=".LockScreenNotificationReceiver">
            <intent-filter>
                <action android:name="android.intent.action.BOOT_COMPLETED"/>
            </intent-filter>
        </receiver>

        <service
            android:name=".LockScreenNotificationService">
        </service>

        <!--
             Upon boot, it listens to broadcasts related to lock screen, used by
             LockScreen Notification feature.
        -->
        <receiver
            android:name=".LockScreenNotificationBootReceiver">
            <intent-filter>
                <action android:name="android.intent.action.BOOT_COMPLETED"/>
            </intent-filter>
        </receiver>
    </application>

</manifest>