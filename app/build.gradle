apply plugin: 'com.android.application'

android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "net.oldev.alsscratchpad"
        minSdkVersion 14
        targetSdkVersion 26
        def vMajor = 0
        def vMinor = 4
        def vPatch = 0
        def vNameSuffix = '' // an optional, descriptive suffix on versionName used sparingly
        versionCode vMajor * 10000 + vMinor * 100 + vPatch
        versionName "${vMajor}.${vMinor}.${vPatch}${vNameSuffix}"

        resConfigs "en"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    signingConfigs {
        releaseConfig {
            if (project.hasProperty("releaseStoreFile")) {
                storeFile file(releaseStoreFile)
            } else {
                storeFile file("keystore")
            }
            if (project.hasProperty("releaseStorePassword")) {
                storePassword releaseStorePassword
            } else {
                storePassword "password"
            }
            if (project.hasProperty("releaseKeyAlias")) {
                keyAlias releaseKeyAlias
            } else {
                keyAlias "alias"
            }
            if (project.hasProperty("releaseKeyPassword")) {
                keyPassword releaseKeyPassword
            } else {
                keyPassword "password"
            }
        }
    }
    buildTypes {
        debug {
            // allow debug / release be installed as separate apps,
            // versionNameSuffix helps to differentiate them visually
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseConfig
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.android.support:design:26.1.0'
    implementation 'com.android.support:support-v4:26.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}

//It will create a new task(s) based on your application variants within (run) group
//sample: ./gradlew installRunDebug
//sample: ./gradlew installRunDevDebug
project.afterEvaluate {
    android.applicationVariants.all { variant ->
        task "installRun${variant.name.capitalize()}"(type: Exec, dependsOn: "install${variant.name.capitalize()}", group: "run") {
            description "Install and run app (${variant.name.capitalize()})"
            // use `monkey` instead of `am start` to avoid specifying activity
            commandLine "adb", "shell", "monkey", "-p", variant.applicationId, "1"
            /// need to specify / deduce package name, activity can be a variable passed with -P
            /// commandLine "adb", "shell", "am", "start", "-n", variant.applicationId + "/" + ".MainActivity"
            doLast {
                println "Launching ${variant.applicationId}"
            }
        }   
    }
}
